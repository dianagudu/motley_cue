## Configuration for motley_cue

########
[mapper]
########
## various service-specific settings

## log_level -- default: WARNING
log_level = WARNING

## audience claim specific to this service
# audience = <ssh_host>

#########
[DEFAULT]
#########
## Magic section that provides default values for all sections below
## These values are overwritten by values in each section, if specified
## DO NOT CHANGE this section unless you really want to apply the changes to ALL OPs

## This is the only key without a default value, must be specified for each section
# op_url =
## authorise all users from trusted OP, defaults to False if not specified
authorise_all = False
## list of VOs whose users are authorised to use the service
authorised_vos = []
## the OIDC claim containing the VOs specified above
vo_claim = eduperson_entitlement
## how many VOs need to be matched from the list, valid options: all, one, or an int
## defaults to one if not specified
vo_match = one
## list of individual users authorised to use the service
## specified through OIDC 'sub', relative to the section's OP ('iss')
## defaults to empy list if not specified
authorised_users = []

#########################################################################################
## The following sections are used to configure auhtorisation of users from multiple OPs
## Any section named [authorisation.*] configures the authorisation for a single OP
##
## Feel free to add more sections to support your desired OPs.
## You can overwrite any of the default values by simply specifying a new value.
## Take a look at the examples in the comments to help get you started.
#########################################################################################

###################
[authorisation.egi]
###################
op_url = https://aai.egi.eu/oidc
## in this example, there is one VO whose members can use the service
## in addition, individual users are authorised by 'sub' claim
## these users don't have to be members of the authorised VOs
# authorised_vos = [
#         "urn:mace:egi.eu:group:eosc-synergy.eu:role=member#aai.egi.eu"
#     ]
# authorised_users = [
#     "c2370093c19496aeb46103cce3ccdc7b183f54ac9ba9c859dea94dfba23aacd5@egi.eu"
# ]

#############################
[authorisation.helmholtz-dev]
#############################
op_url = https://login-dev.helmholtz.de/oauth2
## in this example, the user has to be a member of all the specified VOs
# authorised_vos = [
#         "urn:geant:helmholtz.de:group:KIT#login-dev.helmholtz.de",
#         "urn:geant:helmholtz.de:group:Helmholtz-member#login-dev.helmholtz.de"
#     ]
# vo_match = all

###################
[authorisation.kit]
###################
op_url = https://oidc.scc.kit.edu/auth/realms/kit
## in this example, any KIT user can access the service  
# authorise_all = True

####################
[authorisation.deep]
####################
op_url = https://iam.deep-hybrid-datacloud.eu
## example for supported VOs with a different claim
# authorised_vos = [
#         "KIT-Cloud"
#     ]
# vo_claim = groups

#########################
[authorisation.helmholtz]
#########################
op_url = https://login.helmholtz.de/oauth2/
## in this example, when no additional authorisation is specified besides the OP URL,
## no users from this OP are in fact authorised on the service


#######
[admin]
#######
## NOT IMPLEMENTED
# authorised_vos
# vo_claim
# authorised_users
